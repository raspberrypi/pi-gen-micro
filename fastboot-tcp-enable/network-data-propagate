#!/bin/sh

set -e

# IPv4 validation function
is_ipv4() {
    echo "$1" | grep -E '^([0-9]{1,3}\.){3}[0-9]{1,3}$' >/dev/null
    return $?
}

# IPv6 validation function
is_ipv6() {
    echo "$1" | grep -E '^([0-9a-fA-F]{0,4}:){1,7}[0-9a-fA-F]{0,4}$' >/dev/null
    return $?
}

add_v4_to_fastboot_cfg() {
    ip4="$1"
    counter4="$2"
    echo "ipv4-address_$counter4 = $ip4" >> /data/fastboot.cfg
}

add_v6_to_fastboot_cfg() {
    ip6="$1"
    counter6="$2"
    echo "ipv6-address_$counter6 = $ip6" >> /data/fastboot.cfg
}

# Get the candidate IP addresses from hostname -I
IP_ADDRESSES=$(hostname -I)

# Initialize array for IPv4 addresses
IPV4_ADDRESSES=""
IPV6_ADDRESSES=""

# Process each IP address
for ip in $IP_ADDRESSES; do
    if is_ipv4 "$ip"; then
        IPV4_ADDRESSES="$IPV4_ADDRESSES $ip"
    elif is_ipv6 "$ip"; then
        IPV6_ADDRESSES="$IPV6_ADDRESSES $ip"
    else
        echo "Unknown IP format: $ip" >&2
    fi
done

# Trim leading space
IPV4_ADDRESSES=$(echo "$IPV4_ADDRESSES" | sed 's/^ *//')
IPV6_ADDRESSES=$(echo "$IPV6_ADDRESSES" | sed 's/^ *//')

v4counter=0
for v4address in $IPV4_ADDRESSES; do
    add_v4_to_fastboot_cfg "$v4address" "$v4counter"
    v4counter=$((v4counter + 1))
done

v6counter=0
for v6address in $IPV6_ADDRESSES; do
    add_v6_to_fastboot_cfg "$v6address" "$v6counter"
    v6counter=$((v6counter + 1))
done


